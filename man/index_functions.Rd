% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/index_functions.R
\name{index_functions}
\alias{index_functions}
\alias{split_by_index}
\alias{make_index}
\alias{splitn}
\title{Split into List}
\usage{
split_by_index(dat = NULL, index = NULL, include_first = TRUE,
  include_at_index = TRUE)

make_index(totalN = NULL, eachN, mat = FALSE)

splitn(vec, n)
}
\arguments{
\item{dat}{A matrix, data.frame, data.table, or vector. If table form, split will occur at rows}

\item{index}{A numeric vector that identifies the positions for which to split at}

\item{include_first}{A logical indicating whether it is required to keep elements leading up to the first
index. For example, if I want to split a vector at position 5, 10, and 15, the default value of TRUE would ensure
elements 1 to 5 are returned (or 1 to 4 if argument \code{include_at_index} were set to FALSE)}

\item{include_at_index}{A logical indicating whether to include the element at the index, or drop it.
The default value of TRUE will keep the element in result}

\item{totalN}{A numeric value representing the total observations to split an index over}

\item{eachN}{A numeric value representing the desired number of splits}

\item{mat}{A boolean indicating whether to return the splits as a list or matrix (simplified)}

\item{vec}{A vector to split into n list elements}

\item{n}{The number of desired list elements to split vec into}
}
\description{
Functions to work with indices, or split objects by indices. Functionality includes:
   - Split into list element chunks using a given index that identifies the split points
   - Create a split index for distributed analysis (parallelization, etc.)
}
\section{Functions}{
\itemize{
\item \code{split_by_index}: Split a vector or table by a position given by index vector

\item \code{make_index}: Create a split index for distributed analysis (parallelization, etc.)

\item \code{splitn}: A convenience wrapper around splitIndices. Reduces a step potentially
}}

\examples{
totalN <- 1000
eachN <- 10
make_index(totalN, eachN) # Not simplified
make_index(totalN, eachN, mat = TRUE) # simplified
splitn(letters, 4)
}
