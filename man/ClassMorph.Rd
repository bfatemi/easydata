% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/classmorph.R
\name{ClassMorph}
\alias{ClassMorph}
\alias{NumMorph}
\title{Functions to Change Column Classes}
\usage{
ClassMorph(dt, old = c("factor", "integer", "character", "numeric",
  "logical"), new = c("factor", "integer", "character", "numeric"),
  copy = FALSE, force = FALSE)

NumMorph(dt, cols = NULL, copy = F, verbose = F)
}
\arguments{
\item{dt}{A data.table to morph column classes}

\item{old}{ClassMorph only. A column type, specified as a character value, to detect
and convert to the class specified by 'new'}

\item{new}{ClassMorph only. A column type, specified as a character value, to
convert all columns of the class specified by 'old' to.}

\item{copy}{A boolean value indicating whether to alter \code{dt} in memory or
whether to return a \emph{new (copy)} of the input data.table.}

\item{force}{A boolean indicating whether to force conversion from class factor
to class numeric despite NAs being generated.}

\item{cols}{An optional character vector of column names to operate on.
Not applicable for function ClassMorph.}
}
\value{
Returns a data.table that is either a copy of the input dt that
     has been modified, or the same input dt that has been modified in memory
}
\description{
The functions \code{ClassMorph}, and \code{NumMorph}, in addition to \code{\link{DateMorph}},
are functions designed to make dealing with column classes easy. See examples for how
to avoid uncessary frustrations related to unexpected column classes or date formats.
}
\details{
This function takes care of multiple conversion steps that are sometimes needed to avoid
data loss or unexpected results (e.g. a factor that "looks" like the number "1" may
not convert to a \code{numeric} "1". To get around this common frustration, this function
will perform an indirect conversion to \code{character} before converting to \code{numeric})
}
\section{Functions}{
\itemize{
\item \code{ClassMorph}: A function to convert all columns of class "old" to class "new". This
function handles the indirect conversions sometimes needed to avoid data loss or
unexpected results (see details).

\item \code{NumMorph}: A function to standards classes to "numeric" for all columns of
dt, where a conversion to numeric would not generate NA values.
}}
\examples{
### EXAMPLES OF:
###     1. ClassMorph()
###     2. DateMorph()
###     3. NumMorph()

#### Create example data
dt <- data.table(Int     = as.factor(c(1:2, "-", 4:5)),
                 Double  = rep(2.0, 5),
                 Factor  = as.factor(c(1, "", 2, "", 3)),
                 nFactor = as.factor(rep(999, 5)),
                 Char    = letters[1:5],
                 Date    = rep("2020-01-22", 5))
print(dt)
sapply(dt, class) # check col classes

#### Change all Factors to Integers
ClassMorph(dt, "factor", "integer")
sapply(dt, class) # check col classes

#### Other options include:
#
# not modifying dt in place, rather generate a new copy of dt
ClassMorph(dt, "numeric", "factor", copy = TRUE)

# forcing conversion despite generate of NAs
ClassMorph(dt, "factor", "numeric", force = TRUE)
sapply(dt, class) # check col classes


#### Use DateMorph
DateMorph(dt, "Date")
class(dt[, Date]) # check col classes
}
\seealso{
Other class handler: \code{\link{DateMorph}}
}

