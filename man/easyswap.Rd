% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/easyswap.R
\name{easyswap}
\alias{easyswap}
\title{Swap all instances in a data.table}
\usage{
easyswap(dt = NULL, find = NA, swap = NULL, cols = NULL,
  force = FALSE, copy = FALSE)
}
\arguments{
\item{dt}{A data.table to search and swap values in}

\item{find}{A value to find across all or a subset of columns. Default is NA.}

\item{swap}{A value to replace 'find' with}

\item{cols}{An optional character vector giving the names of the columns to make the swap in.
If not provided, swap will happen across all columns. See examples below.}

\item{force}{A boolean value specifying whether to try and coerce column classes in the event
where the swap value is a different data type than the column. See examples below.}

\item{copy}{A boolean value indicating whether to make the swap on a COPY of the data. Default
is false and the swap is made in memory. See examples below.}
}
\value{
A modified copy of dt
}
\description{
\code{easyswap} is a function that efficiently finds and replaces all instances of a given
value with another given value. This occurs across all columns to use, unless an optional argument
specifying the columns is provided.
}
\examples{
# Create sample data.table
dt <- data.table(A = c("A", NA, "A", "A", NA),
                 B = c(NA, "B", "B", "B", "B"),
                 C = rep(NA, 5),
                 D = c("D", "D", "D", NA, "D"))
# Simple use
easyswap(dt, find="A", swap = "AA")

# ERROR: swaping a numeric into char column. USE FORCE = TRUE
# xSwap(dt, swap = 0)

easyswap(dt, swap = 0, force = T) # No error

# Make a copy of the table rather than an "IN-MEMORY" swap. This will return a NEW dt
easyswap(dt, swap = 0, force = T, copy = T)

# swap in 1 or more specific columns
easyswap(dt,
         find = "0",
         swap = "999",
         cols = c("A", "B"))
}
\seealso{
Other quick.wranglers: \code{\link{easysplit}}
}

