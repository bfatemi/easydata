% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_column.R
\name{find_column}
\alias{find_column}
\title{Find known column name in messy csv files}
\usage{
find_column(colName, DT)
}
\arguments{
\item{colName}{A name representing a known column, to search for the position}

\item{DT}{A data.table where the searching should take place}
}
\value{
A 2 entry list representing the row and column where the search criteria was found
}
\description{
Function assists with finding a prior known column name in the event that a csv
file is read into and first few rows or columns are potentially junk.
}
\details{
This function returns the position of the column in a list in a row, column order.
For example, a list with elements (0, 0) means column name was not found. A list with
first element 0 and last element > 0 means the column name is a current column name (0th row)
and at column position 1 or greater. (>0, >0) gives the literal index of the cell where
the searched name was found.
}
\examples{
## Create fake data
##
DT <- rbindlist(
    list(
        data.table(V1 = "Junk notes as first row", V2=NA, V3=NA, V4=NA), 
        data.table("colA", "colB", "colC", "colD")
    ), fill=TRUE)
    
## Can't find name
find_column("does not exist", DT) # (0, 0)

## Finds name as current column name
find_column("V3", DT) # (0, 3)

## Finds a name
find_column("colA", DT)
}
