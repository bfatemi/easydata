% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/easydate.R
\name{DateMorph}
\alias{DateMorph}
\title{Functions to Change Column Classes}
\usage{
DateMorph(dt, cols = NULL, format = NULL, tz = c("current", "utc", "gmt"),
  copy = FALSE)
}
\arguments{
\item{dt}{A data.table to morph column classes}

\item{format}{Format of the value to convert to date. See examples for acceptable formats.}

\item{tz}{A character value indicating the timezone. Options are: "current", "utc", and "gmt"}
}
\description{
The functions \code{\link{ClassMorph}}, and \code{\link{NumMorph}}, in addition to \code{DateMorph},
are functions designed to make dealing with column classes easy.
}
\examples{
### EXAMPLES OF:
###     1. ClassMorph()
###     2. DateMorph()
###     3. NumMorph()

#### Create example data
dt <- data.table(Int     = as.factor(c(1:2, "-", 4:5)),
                 Double  = rep(2.0, 5),
                 Factor  = as.factor(c(1, "", 2, "", 3)),
                 nFactor = as.factor(rep(999, 5)),
                 Char    = letters[1:5],
                 Date    = rep("2020-01-22", 5))
print(dt)
sapply(dt, class) # check col classes

#### Change all Factors to Integers
ClassMorph(dt, "factor", "integer")
sapply(dt, class) # check col classes

#### Other options include:
#
# not modifying dt in place, rather generate a new copy of dt
ClassMorph(dt, "numeric", "factor", copy = TRUE)

# forcing conversion despite generate of NAs
ClassMorph(dt, "factor", "numeric", force = TRUE)
sapply(dt, class) # check col classes


#### Use DateMorph
DateMorph(dt, "Date")
class(dt[, Date]) # check col classes
}
\seealso{
Other class.handler: \code{\link{ClassMorph}},
  \code{\link{NumMorph}}
}

